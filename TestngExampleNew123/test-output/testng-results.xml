<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-28T11:15:12 IST" name="Suite1" finished-at="2023-05-28T11:15:41 IST" duration-ms="28523">
    <groups>
    </groups>
    <test started-at="2023-05-28T11:15:12 IST" name="exampletest1" finished-at="2023-05-28T11:15:34 IST" duration-ms="21402">
      <class name="scs.EroomRent1">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:12 IST" name="openBrowser" finished-at="2023-05-28T11:15:19 IST" duration-ms="6588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="beforeClassExample()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:19 IST" name="beforeClassExample" finished-at="2023-05-28T11:15:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassExample -->
        <test-method is-config="true" signature="openWebsite()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:19 IST" name="openWebsite" finished-at="2023-05-28T11:15:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openWebsite -->
        <test-method signature="brokerRegister()[pri:1, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:19 IST" name="brokerRegister" finished-at="2023-05-28T11:15:21 IST" duration-ms="2575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- brokerRegister -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:21 IST" name="aftermethod" finished-at="2023-05-28T11:15:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="openWebsite()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:21 IST" name="openWebsite" finished-at="2023-05-28T11:15:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openWebsite -->
        <test-method signature="brokerlogin()[pri:2, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:21 IST" name="brokerlogin" finished-at="2023-05-28T11:15:25 IST" duration-ms="3853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- brokerlogin -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:25 IST" name="aftermethod" finished-at="2023-05-28T11:15:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="addRoom()[pri:3, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:25 IST" name="addRoom" finished-at="2023-05-28T11:15:31 IST" duration-ms="5883" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Eclipse and project\JA.png
  (Session info: chrome=113.0.5672.127)
Build info: version: '4.8.3', revision: 'b19b418e60'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.16'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b37cdea8e7f85dd0a6a9b511b34b3ca7, sendKeysToElement {id=EE92AFFD4C95AB4F74401FBA683EAA83_element_945, value=[Ljava.lang.CharSequence;@45bb2aa1}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.127, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:61135}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61135/devtoo..., se:cdpVersion: 113.0.5672.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (b37cdea8e7f85dd0a6a9b511b34b3ca7)] -> css selector: input[name='file']]
Session ID: b37cdea8e7f85dd0a6a9b511b34b3ca7]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Eclipse and project\JA.png
  (Session info: chrome=113.0.5672.127)
Build info: version: '4.8.3', revision: 'b19b418e60'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.16'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b37cdea8e7f85dd0a6a9b511b34b3ca7, sendKeysToElement {id=EE92AFFD4C95AB4F74401FBA683EAA83_element_945, value=[Ljava.lang.CharSequence;@45bb2aa1}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.127, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:61135}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61135/devtoo..., se:cdpVersion: 113.0.5672.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (b37cdea8e7f85dd0a6a9b511b34b3ca7)] -> css selector: input[name='file']]
Session ID: b37cdea8e7f85dd0a6a9b511b34b3ca7
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:113)
at scs.EroomRent1.addRoom(EroomRent1.java:112)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRoom -->
        <test-method is-config="true" signature="openWebsite()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:25 IST" name="openWebsite" finished-at="2023-05-28T11:15:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openWebsite -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:31 IST" name="aftermethod" finished-at="2023-05-28T11:15:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="openWebsite()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:31 IST" name="openWebsite" finished-at="2023-05-28T11:15:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openWebsite -->
        <test-method signature="logout()[pri:4, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:31 IST" name="logout" finished-at="2023-05-28T11:15:33 IST" duration-ms="2214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="afterClassExample()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:33 IST" name="afterClassExample" finished-at="2023-05-28T11:15:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassExample -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:33 IST" name="aftermethod" finished-at="2023-05-28T11:15:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:33 IST" name="afterTest" finished-at="2023-05-28T11:15:34 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scs.EroomRent1 -->
    </test> <!-- exampletest1 -->
    <test started-at="2023-05-28T11:15:34 IST" name="exampletest2" finished-at="2023-05-28T11:15:41 IST" duration-ms="7058">
      <class name="scs.EroomRent1">
        <test-method is-config="true" signature="beforeSuiteExample()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:12 IST" name="beforeSuiteExample" finished-at="2023-05-28T11:15:12 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteExample -->
        <test-method is-config="true" signature="afterSuiteExample()[pri:0, instance:scs.EroomRent1@12aba8be]" started-at="2023-05-28T11:15:41 IST" name="afterSuiteExample" finished-at="2023-05-28T11:15:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteExample -->
      </class> <!-- scs.EroomRent1 -->
      <class name="scs.Example1">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:scs.Example1@5824a83d]" started-at="2023-05-28T11:15:34 IST" name="beforeTest" finished-at="2023-05-28T11:15:35 IST" duration-ms="842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="f()[pri:0, instance:scs.Example1@5824a83d]" started-at="2023-05-28T11:15:35 IST" name="f" finished-at="2023-05-28T11:15:41 IST" duration-ms="6212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:scs.Example1@5824a83d]" started-at="2023-05-28T11:15:41 IST" name="afterTest" finished-at="2023-05-28T11:15:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scs.Example1 -->
    </test> <!-- exampletest2 -->
  </suite> <!-- Suite1 -->
</testng-results>
